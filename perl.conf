#
# Mod_perl incorporates a Perl interpreter into the Apache web server,
# so that the Apache web server can directly execute Perl code.
# Mod_perl links the Perl runtime library into the Apache web server
# and provides an object-oriented Perl interface for Apache's C
# language API.  The end result is a quicker CGI script turnaround
# process, since no external Perl interpreter has to be started.
#

LoadModule perl_module modules/mod_perl.so

# Uncomment this line to globally enable warnings, which will be
# written to the server's error log.  Warnings should be enabled
# during the development process, but should be disabled on a
# production server as they affect performance.
#
PerlWarn Off

# Uncomment this line to enable taint checking globally.  When Perl is
# running in taint mode various checks are performed to reduce the
# risk of insecure data being passed to a subshell or being used to
# modify the filesystem.  Unfortunatly many Perl modules are not
# taint-safe, so you should exercise care before enabling it on a
# production server.
#
#PerlTaintCheck On

# This will allow execution of mod_perl to compile your scripts to
# subroutines which it will execute directly, avoiding the costly
# compile process for most requests.
#
#Alias /perl /var/www/perl
#<Directory /var/www/perl>
#    SetHandler perl-script
#    PerlResponseHandler ModPerl::Registry
#    PerlOptions +ParseHeaders
#    Options +ExecCGI
#</Directory>
# <Perl>
#	use lib qw( /home/eprint/code );
#</Perl>
# This will allow remote server configuration reports, with the URL of
#  http://servername/perl-status
# Change the ".your-domain.com" to match your domain to enable.
#
#<Location /perl-status>
#    SetHandler perl-script
#    PerlResponseHandler Apache::Status
#    Order deny,allow
#    Deny from all
#    Allow from .your-domain.com
#</Location>
PerlModule Apache2::compat


<Perl>
use lib qw(/home/eprint/code);
</Perl>

        PerlRequire /home/eprint/cgi-bin/startup.pl
        PerlRequire /home/eprint/cgi-bin/startupadmin.pl
<Location /cgi-bin/eprint.cgi>


        SetHandler perl-script
        PerlHandler ModPerl::Registry
        PerlSendHeader On

        #AllowOverride None
        Options ExecCGI FollowSymLinks
        #allow from all
	Require all granted
</Location>
<Location /cgi-bin/admin.cgi>


        SetHandler perl-script
        PerlHandler ModPerl::Registry
        PerlSendHeader On

        #AllowOverride None
        Options ExecCGI FollowSymLinks
        #allow from all
	Require all granted
</Location>

#
#  Luminis API additions
#

#  use the Luminis redirector to catch and re-write API URLs

PerlModule Luminis::Redirect
PerlTransHandler Luminis::Redirect

alias /luminis /home/eprint/luminis

<Directory /luminis>

</Directory>

<Location /luminis/getconfigversion1.cgi>
        #PerlInitHandler Apache2::Reload
        SetHandler perl-script
        PerlHandler ModPerl::Registry
        PerlSendHeader Off
        Options ExecCGI
</Location>

<Location /luminis/authenticate2.cgi>
        #PerlInitHandler Apache2::Reload
        SetHandler perl-script
        PerlHandler ModPerl::Registry
        PerlSendHeader Off
        Options ExecCGI

</Location>

<Location /luminis/deauthenticate.cgi>
        #PerlInitHandler Apache2::Reload
        SetHandler perl-script
        PerlHandler ModPerl::Registry
        PerlSendHeader Off
        Options ExecCGI
</Location>

<Location /luminis/lastactivity.cgi>
        #PerlInitHandler Apache2::Reload
        SetHandler perl-script
        PerlHandler ModPerl::Registry
        PerlSendHeader Off
        Options ExecCGI
</Location>

<Location /luminis/pickup.cgi>
        #PerlInitHandler Apache2::Reload
        SetHandler perl-script
        PerlHandler ModPerl::Registry
        PerlSendHeader Off
        Options ExecCGI
</Location>
